name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'config/**'
      - 'pyproject.toml'
      - '.github/workflows/**'
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'config/**'
      - 'pyproject.toml'

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          
      - name: Install dependencies directly
        run: |
          pip install ruff black mypy
          
      - name: Run ruff linting
        run: |
          ruff check backend/ config/ --ignore E501,F401
        continue-on-error: true
          
      - name: Run black formatting check
        run: |
          black --check backend/ config/ --line-length 88
        continue-on-error: true
          
      - name: Run mypy type checking
        run: |
          mypy backend/ --ignore-missing-imports
        continue-on-error: true

  basic-tests:
    name: Basic Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          
      - name: Install basic dependencies
        run: |
          pip install pytest pydantic requests beautifulsoup4 httpx
          
      - name: Create test directories
        run: |
          mkdir -p backend/database
          mkdir -p backend/logs
          mkdir -p backend/output
          mkdir -p docs/data/archives
          
      - name: Run basic tests
        run: |
          python -m pytest backend/tests/test_simple.py -v
        continue-on-error: true

  pr-summary:
    name: PR Summary  
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, basic-tests]
    if: always() && github.event_name == 'pull_request'
    
    steps:
      - name: Generate PR summary
        run: |
          echo "## 🚀 CI/CD Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint & Type Check | ${{ needs.lint-and-type-check.result == 'success' && '✅ Passed' || '⚠️ With warnings' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Basic Tests | ${{ needs.basic-tests.result == 'success' && '✅ Passed' || '⚠️ Check needed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "📝 Code quality checks completed. Ready for manual review." >> $GITHUB_STEP_SUMMARY